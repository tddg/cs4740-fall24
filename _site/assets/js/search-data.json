{"0": {
    "doc": "Announcements",
    "title": "Announcements",
    "content": " ",
    "url": "/cs4740-fall24/announcements/",
    "relUrl": "/announcements/"
  },"1": {
    "doc": "Announcements",
    "title": "Week 1 Announcement",
    "content": "Aug 28 &middot; 0 min read . | Welcome to CS 4740! | Lecture 1’s slides are posted. | . ",
    "url": "/cs4740-fall24/announcements/",
    "relUrl": "/announcements/"
  },"2": {
    "doc": "CS4740, Fall 2024",
    "title": "CS4740, Fall’24: Cloud Computing",
    "content": " ",
    "url": "/cs4740-fall24/#cs4740-fall24-cloud-computing",
    "relUrl": "/#cs4740-fall24-cloud-computing"
  },"3": {
    "doc": "CS4740, Fall 2024",
    "title": "Week 1 Announcement",
    "content": "Aug 28 &middot; 0 min read . | Welcome to CS 4740! | Lecture 1’s slides are posted. | . Announcements . ",
    "url": "/cs4740-fall24/",
    "relUrl": "/"
  },"4": {
    "doc": "CS4740, Fall 2024",
    "title": "Overview",
    "content": "In today’s digital age, cloud computing has fundamentally transformed how we work, communicate, and interact. By leveraging distributed systems, it provides flexible and scalable solutions that cater to various computing demands, from storing vast amounts of data to running complex applications. This is an undergraduate-level course which explores system perspectives of cloud computing, including key concepts and principles in the design and development of cloud systems. This course primarily emphasizes the perspective of system providers rather than users. The lectures cover distributed system concepts such as distributed communication models, synchronization, consistency, fault tolerance, as well as introduction to influential cloud infrastructure and frameworks. Students gain practical experience through the study of algorithms and the project of building distributed applications. ",
    "url": "/cs4740-fall24/#overview",
    "relUrl": "/#overview"
  },"5": {
    "doc": "CS4740, Fall 2024",
    "title": "Lecture Info",
    "content": ". | Instructor: Yue Cheng | Meeting time: MW 3:30 pm - 4:45pm | Location: Olsson Hall 005 . | IMPORTANT: Initial classes will be conducted online as the instructor is attending an international conference (VLDB’24). Students have two options to join the class via: a) classroom streaming (Olsson Hall 005) or b) online Zoom meeting (link posted on Canvas). Note the teaching will transition to in-person classes in Week 3 once the instructor is back on campus. | . | . ",
    "url": "/cs4740-fall24/#lecture-info",
    "relUrl": "/#lecture-info"
  },"6": {
    "doc": "CS4740, Fall 2024",
    "title": "High-level Topics (tentative)",
    "content": ". | Introduction | Fundamentals | Fault tolerance and consensus | Big data processing | Consistency, scalability, transactions | Datacenter techniques | Reasoning about system performance | . ",
    "url": "/cs4740-fall24/#high-level-topics-tentative",
    "relUrl": "/#high-level-topics-tentative"
  },"7": {
    "doc": "CS4740, Fall 2024",
    "title": "Prerequisite",
    "content": ". | CS 2130 (Computer Systems and Organization). Solid system programming skills are strongly recommended. | This is a programming-intensive course. You need to be comfortable with programming in one of the following languages including C, Python, Java. Knowing a language serves as a soft prerequisite and would get you prepared to learn a new language (if you haven’t already) and do the programming assignments in this course. | . | Being comfortable with programming in one of the aforementioned languages will ease the learning curve for you to pick up a new programming language Go if you haven’t used Go before. All programming assignments will be in Go. | . ",
    "url": "/cs4740-fall24/#prerequisite",
    "relUrl": "/#prerequisite"
  },"8": {
    "doc": "CS4740, Fall 2024",
    "title": "CS4740, Fall 2024",
    "content": " ",
    "url": "/cs4740-fall24/",
    "relUrl": "/"
  },"9": {
    "doc": "Course Syllabus",
    "title": "Course Syllabus",
    "content": " ",
    "url": "/cs4740-fall24/info/",
    "relUrl": "/info/"
  },"10": {
    "doc": "Course Syllabus",
    "title": "Table of contents",
    "content": ". | Reading | Programming labs | Collaboration policy | Late policy . | Quizzes . | Allowed | NOT allowed | . | . | Grading . | Grading rules | . | Academic Integrity | Students with disabilities or learning needs | . ",
    "url": "/cs4740-fall24/info/#table-of-contents",
    "relUrl": "/info/#table-of-contents"
  },"11": {
    "doc": "Course Syllabus",
    "title": "Reading",
    "content": "There are no official textbooks. Required readings are (most frequently) in the form of seminal research papers, online documentations, and/or selected textbook chapters There are several books that might be useful: . | Distributed Systems 3rd edition (2017), by Maarten van Steen and Andrew S. Tenenbaum (free book). | Operating Systems: Three Easy Pieces (OSTEP), by Remzi H. Arpaci-Dusseau and Andrea C. Arpaci-Dusseau, Aug, 2018 v 1.00 (free book). | The Go Programming Language. Alan A. A. Donovan and Brian W. Kernighan (though this is an old book, the basic concepts about Goroutines and Channels never change – use it as a reference if you find online resources not sufficient). See instruction below how to access the free version via UVA Library. | . To access the Go Programming Language text book, you just need to do the following: . | Access the UVA Library website. | Search the title of the textbook: The Go Programming Language. | Click on Library Catalog (Access Online), and sign into the O’Reilly website with your UVA email address. | If the O’Reilly link brings you to an audiobook, search for the textbook in O’Reilly website and find the ebook. | . | . ",
    "url": "/cs4740-fall24/info/#reading",
    "relUrl": "/info/#reading"
  },"12": {
    "doc": "Course Syllabus",
    "title": "Programming labs",
    "content": "A tentative list of programming lab assignments (note the order and the topic of the programming labs is tentative and is subject to change): . | Lab 0: Intro to Go: Familiarize yourself with Go (5%); | Lab 1: MapReduce (15%); | Lab 2: Key-value server (15%); | Lab 3a: Raft leader election (10%); | Lab 3b: Raft log replication (10%); | Lab 4: Serverless and containerization (15%). | . ",
    "url": "/cs4740-fall24/info/#programming-labs",
    "relUrl": "/info/#programming-labs"
  },"13": {
    "doc": "Course Syllabus",
    "title": "Collaboration policy",
    "content": ". | Students must work individually on all programming assignments. We encourage you to have high-level discussions with other students in the class about the assignments. | However, we require that when you turn in an assignment, it is only your work. That is, copying any part of another student’s assignment is strictly prohibited. Anything that you hand in, whether it is a written problem or a computer program, must be written in your own words. If you base your solution on any other written solution, you are cheating. | Never look at another student’s code or share your code with any other student. | You must not make your code public (on GitHub or by any other means). | . ",
    "url": "/cs4740-fall24/info/#collaboration-policy",
    "relUrl": "/info/#collaboration-policy"
  },"14": {
    "doc": "Course Syllabus",
    "title": "Late policy",
    "content": "Your work is late if it is not turned in by the deadline. | 10% will be deducted for late assignments each day after the due date. That is, if an assignment is late, we’ll grade it and scale the score by 0.9 if it is up to one day late, by 0.8 if it is up to two days late, and by 0.7 if it is up to three days late. | Late assignments will only be accepted for 3 days after the due date. Assignments submitted more than 3 days late will receive a zero. If you’re worried about being busy around the time of a HW submission, please plan ahead and get started early. | Assignment that does not compile or run will receive at most 50% credit. | . IMPORTANT: Please plan ahead and get started early! Debugging distributed systemscan be time-consuming. For fairness to all, there are no exceptions to the above rules. Quizzes . There will be a short quiz due at the end of most Wednesdays. Make sure you know the rules regarding what is allowed and what is not. Allowed . | However much time you need. | Discussing answers with classmates who are taking the quiz at the same time. | Referencing texts, notes, or provided course materials. | Searching online for general information. | Running code. | . NOT allowed . | Taking it more than once. | Discussing answers with anybody outside of the course. | Discussing with classmates who have already completed the quiz when you haven’t completed it yourself yet. | Posting anything online about the quizzes. | Using such material potentially posted by other students who broke the preceding rule. | Getting TA/instructor help on quiz questions prior to the quiz deadline. | . ",
    "url": "/cs4740-fall24/info/#late-policy",
    "relUrl": "/info/#late-policy"
  },"15": {
    "doc": "Course Syllabus",
    "title": "Grading",
    "content": "Your grade will be calculated as follows: . | 70% programming assignments | 5% quizzes | 10% midterm exam | 15% final exam | . Grading rules . The final grade is computed according to the following rules: . TBA . ",
    "url": "/cs4740-fall24/info/#grading",
    "relUrl": "/info/#grading"
  },"16": {
    "doc": "Course Syllabus",
    "title": "Academic Integrity",
    "content": "The School relies upon and cherishes its community of trust. We firmly endorse, uphold, and embrace the University’s Honor principle that students will not lie, cheat, or steal, nor shall they tolerate those who do. We recognize that even one honor infraction can destroy an exemplary reputation that has taken years to build. Acting in a manner consistent with the principles of honor will benefit every member of the community both while enrolled in the School of Data Science and in the future. Students are expected to be familiar with the university honor code, including the section on academic fraud. ",
    "url": "/cs4740-fall24/info/#academic-integrity",
    "relUrl": "/info/#academic-integrity"
  },"17": {
    "doc": "Course Syllabus",
    "title": "Students with disabilities or learning needs",
    "content": "It is my goal to create a learning experience that is as accessible as possible. If you anticipate any issues related to the format, materials, or requirements of this course, please meet with me outside of class so we can explore potential options. Students with disabilities may also wish to work with the Student Disability Access Center to discuss a range of options to removing barriers in this course, including official accommodations. Please visit their website for information on this process and to apply for services online. If you have already been approved for accommodations through SDAC, please send me your accommodation letter and meet with me so we can develop an implementation plan together. ",
    "url": "/cs4740-fall24/info/#students-with-disabilities-or-learning-needs",
    "relUrl": "/info/#students-with-disabilities-or-learning-needs"
  },"18": {
    "doc": "Labs",
    "title": "Labs",
    "content": " ",
    "url": "/cs4740-fall24/labs/",
    "relUrl": "/labs/"
  },"19": {
    "doc": "Lecture 1: Introduction",
    "title": "Lecture 1: Introduction",
    "content": "Learning objectives: . In this lecture, you will learn: . | about the scope of distributed systems and cloud computing. | how this course will be organized, and what will be expected from you. | . Lecture slides . | Introduction: slides pdf | . Resources . | Class Syllabus | . ",
    "url": "/cs4740-fall24/lectures/lec1-intro",
    "relUrl": "/lectures/lec1-intro"
  },"20": {
    "doc": "Lectures",
    "title": "Lectures",
    "content": " ",
    "url": "/cs4740-fall24/lectures/",
    "relUrl": "/lectures/"
  },"21": {
    "doc": "Reading List",
    "title": "Reading List",
    "content": "This is a tentative reading list. Being less concrete further out, the reading list is being incrementally updated to include more papers as we go. MapReduce: Simplified Data Processing on Large Clusters [USENIX OSDI 2004] . The Google File System [ACM SOSP 2003] . Resilient Distributed Datasets: A Fault-Tolerant Abstraction for In-Memory Cluster Computing [USENIX NSDI 2012] . Cloud Programming Simplified: A Berkeley View on Serverless Computing [Tech report] . Occupy the Cloud: Distributed Computing for the 99% [ACM SoCC 2017] . Dynamo: Amazon’s Highly Available Key-value Store [ACM SOSP 2007] . Building and operating a pretty big storage system called S3 [Guest post from Andy Warfield, VP and distinguished engineer over AWS S3] . ",
    "url": "/cs4740-fall24/reading_list/",
    "relUrl": "/reading_list/"
  },"22": {
    "doc": "Course Schedule",
    "title": "Course Schedule",
    "content": " ",
    "url": "/cs4740-fall24/schedule/",
    "relUrl": "/schedule/"
  },"23": {
    "doc": "Staff",
    "title": "Staff",
    "content": " ",
    "url": "/cs4740-fall24/staff/",
    "relUrl": "/staff/"
  },"24": {
    "doc": "Staff",
    "title": "Office Hours",
    "content": "The time and location of office hours will be determined ASAP. Links to join the TA and instructor office hours are posted in Canvas. ",
    "url": "/cs4740-fall24/staff/#office-hours",
    "relUrl": "/staff/#office-hours"
  },"25": {
    "doc": "Staff",
    "title": "Instructors",
    "content": "Yue Cheng . mrz7dp@virginia.edu . Office Hours: Thursday 10-11am, Zoom . ",
    "url": "/cs4740-fall24/staff/#instructors",
    "relUrl": "/staff/#instructors"
  },"26": {
    "doc": "Staff",
    "title": "Teaching Assistant",
    "content": "Ling Han . mtd3tu@virginia.edu . Office Hours: Monday 6pm-8pm, location TBD . Rui Yang . qgh4hm@virginia.edu . Office Hours: time and location TBD . Yilong Yang . kbh8sa@virginia.edu . Office Hours: Friday 3pm-5pm location TBD . ",
    "url": "/cs4740-fall24/staff/#teaching-assistant",
    "relUrl": "/staff/#teaching-assistant"
  }
}
